using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GreeksForGreeks_coding_Csharp_problems
{
    public class MissingNumber
    {
        public static int getMissingNumber(int[] a, int n)
        {
            int total = (n + 1) * (n + 2) / 2;
            for (int i = 0; i < a.Length; i++)
            {
                total -= a[i];
            }
            return total;
        }
    }
    class Program
    {        
        static void Main(string[] args)
        {
            // 1.) Find the missing number
            /*int[] arr = new int[] { 1, 2, 3, 9, 8, 6, 7, 4 };
            int max = arr.Max();
            int[] newArr = new int[max];
            for (int i = 1; i < max + 1; i++)
            {
                newArr[i - 1] = i;
            }
            Array.Sort(arr);

            for (int i = 0; i < newArr.Length; i++)
            {
                if (arr[i] != newArr[i])
                {
                    Console.WriteLine("The Missing number is : {0}", i + 1);
                    break;
                }
            }

            // alternative method
            Console.WriteLine("The missing number is : {0}", MissingNumber.getMissingNumber(arr, arr.Length));*/



            // 2.) Multiples of 3 and 5 :- if we list all the natural numbers below 10 that are multiples of 3 and 5,
            // we get 3, 5, 6, 9. The sum of these multiples is 23.
            // Find the sum of all the multiples of 3 and 5 below 1000.
            /*int sumOfNumber = 0;
            for (int i = 3; i < 1000; i++)
            {
                if((i % 3) == 0)
                {
                    sumOfNumber += i;
                }
                else if((i % 5) == 0)
                {
                    sumOfNumber += i;
                }
            }
            Console.WriteLine("The sum of all the multiples of 3 and 5 below 1000 is : {0}", sumOfNumber);*/

            // 3.) Even Fibonacci numbers : Each new term in the Fibonnaci sequence is generated by adding the previous 
            // two terms. By starting with 1 and 2, the first 10 terms will be :
            // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, .....
            // By considering the terms in the fibonnaci sequence whose values do not exceed four millions, find the 
            // sum of the even valued terms.

            //Console.WriteLine(FibonnaciSeries(10));
            /*List<int> lst2 = new List<int>();
            lst2 = FibonnaciSeries(10);
            foreach (int item in lst2)
            {
                Console.Write(item + (item != lst2[lst2.Count - 1]? " , ": " "));
            }
            Console.WriteLine();
            Console.ReadLine();
        }
        public static List<int> FibonnaciSeries(int n)
        {
            int maxFibonnaciSequenceNumber = 4000000;
            int val1 = 0, val2 = 1, val3 = val1 + val2;            
            *//*Console.WriteLine(val1);
            Console.WriteLine(val2);*//*
            // Console.WriteLine(val3);
            List<int> lst = new List<int>() { val3 };
            for (int i = 0; i < n - 1; i++)
            {
                val1 = val2;
                val2 = val3;
                val3 = val1 + val2;
                // Console.WriteLine(val3);
                lst.Append(val3);
            }
            return lst ;*/

            // 4.) Efficient Program to print all prime factors of a given number.
            // Given a number n, write an efficient function to print all prime factors of n.
            // For example, if the input number is 12, then the output should be “2 2 3”.
            // And if the input number is 315, then the output should be “3 3 5 7”.

            Console.WriteLine("Enter your number : ");
            int num = int.Parse(Console.ReadLine());    // 20
            for (int i = 2; i < num; i++)
            {
                for (int j = 1; j <= i; j++)
                {
                    
                }
            }

            
            Console.ReadLine();
        }

    }
}
